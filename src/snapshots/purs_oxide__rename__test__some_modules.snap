---
source: src/rename.rs
expression: "rename_mod(indoc!(\"\n        module Test where \n        \n        import Lib\n        import Lib2 \n\n        g :: A -> B -> A\n        g a b = f a b\n\n        h :: A\n        h = g a b\n        \"),\n    vec![indoc!\n        (\"\n        module Lib where\n        \n        data A = A\n        data B = B\n\n        a :: A\n        a = A\n\n        b :: B\n        b = B\"),\n        indoc!\n        (\"\n        module Lib2 where\n                \n        import Lib        \n\n        f :: A -> B -> A\n        f a _ = a\n        \")])"
---
(
    IndexedModule {
        module_id: ModuleId {
            name: "Test",
        },
        types: {},
        values: {
            AbsoluteName {
                module: ModuleId {
                    name: "Test",
                },
                name: Symbol {
                    text: "g",
                },
            }: ValueDecl {
                name: AbsoluteName {
                    module: ModuleId {
                        name: "Test",
                    },
                    name: Symbol {
                        text: "g",
                    },
                },
                type_: Some(
                    Located(
                        SourceSpan {
                            start: 50,
                            end: 61,
                        },
                        FunctionType(
                            Located(
                                SourceSpan {
                                    start: 50,
                                    end: 51,
                                },
                                TypeConstructor(
                                    QualifiedName {
                                        module: None,
                                        name: Symbol {
                                            text: "A",
                                        },
                                    },
                                ),
                            ),
                            Located(
                                SourceSpan {
                                    start: 55,
                                    end: 61,
                                },
                                FunctionType(
                                    Located(
                                        SourceSpan {
                                            start: 55,
                                            end: 56,
                                        },
                                        TypeConstructor(
                                            QualifiedName {
                                                module: None,
                                                name: Symbol {
                                                    text: "B",
                                                },
                                            },
                                        ),
                                    ),
                                    Located(
                                        SourceSpan {
                                            start: 60,
                                            end: 61,
                                        },
                                        TypeConstructor(
                                            QualifiedName {
                                                module: None,
                                                name: Symbol {
                                                    text: "A",
                                                },
                                            },
                                        ),
                                    ),
                                ),
                            ),
                        ),
                    ),
                ),
                equations: [
                    CaseBranch {
                        pats: [
                            Located(
                                SourceSpan {
                                    start: 64,
                                    end: 65,
                                },
                                Var(
                                    Symbol {
                                        text: "a",
                                    },
                                ),
                            ),
                            Located(
                                SourceSpan {
                                    start: 66,
                                    end: 67,
                                },
                                Var(
                                    Symbol {
                                        text: "b",
                                    },
                                ),
                            ),
                        ],
                        expr: Unconditional(
                            Located(
                                SourceSpan {
                                    start: 70,
                                    end: 75,
                                },
                                App(
                                    Located(
                                        SourceSpan {
                                            start: 70,
                                            end: 71,
                                        },
                                        Var(
                                            QualifiedName {
                                                module: Some(
                                                    ModuleId {
                                                        name: "Lib2",
                                                    },
                                                ),
                                                name: Symbol {
                                                    text: "f",
                                                },
                                            },
                                        ),
                                    ),
                                    [
                                        Located(
                                            SourceSpan {
                                                start: 72,
                                                end: 73,
                                            },
                                            Var(
                                                QualifiedName {
                                                    module: None,
                                                    name: Symbol {
                                                        text: "a",
                                                    },
                                                },
                                            ),
                                        ),
                                        Located(
                                            SourceSpan {
                                                start: 74,
                                                end: 75,
                                            },
                                            Var(
                                                QualifiedName {
                                                    module: None,
                                                    name: Symbol {
                                                        text: "b",
                                                    },
                                                },
                                            ),
                                        ),
                                    ],
                                ),
                            ),
                        ),
                    },
                ],
            },
            AbsoluteName {
                module: ModuleId {
                    name: "Test",
                },
                name: Symbol {
                    text: "h",
                },
            }: ValueDecl {
                name: AbsoluteName {
                    module: ModuleId {
                        name: "Test",
                    },
                    name: Symbol {
                        text: "h",
                    },
                },
                type_: Some(
                    Located(
                        SourceSpan {
                            start: 82,
                            end: 83,
                        },
                        TypeConstructor(
                            QualifiedName {
                                module: None,
                                name: Symbol {
                                    text: "A",
                                },
                            },
                        ),
                    ),
                ),
                equations: [
                    CaseBranch {
                        pats: [],
                        expr: Unconditional(
                            Located(
                                SourceSpan {
                                    start: 88,
                                    end: 93,
                                },
                                App(
                                    Located(
                                        SourceSpan {
                                            start: 88,
                                            end: 89,
                                        },
                                        Var(
                                            QualifiedName {
                                                module: Some(
                                                    ModuleId {
                                                        name: "Test",
                                                    },
                                                ),
                                                name: Symbol {
                                                    text: "g",
                                                },
                                            },
                                        ),
                                    ),
                                    [
                                        Located(
                                            SourceSpan {
                                                start: 90,
                                                end: 91,
                                            },
                                            Var(
                                                QualifiedName {
                                                    module: Some(
                                                        ModuleId {
                                                            name: "Lib",
                                                        },
                                                    ),
                                                    name: Symbol {
                                                        text: "a",
                                                    },
                                                },
                                            ),
                                        ),
                                        Located(
                                            SourceSpan {
                                                start: 92,
                                                end: 93,
                                            },
                                            Var(
                                                QualifiedName {
                                                    module: Some(
                                                        ModuleId {
                                                            name: "Lib",
                                                        },
                                                    ),
                                                    name: Symbol {
                                                        text: "b",
                                                    },
                                                },
                                            ),
                                        ),
                                    ],
                                ),
                            ),
                        ),
                    },
                ],
            },
        },
        classes: {},
    },
    [],
)
