---
source: src/parser.rs
expression: "parse_expr(\"case x of -1 -> 1\")"
---
Located(
    SourceSpan {
        decl: Module(
            ModuleId {
                name: "Test",
            },
        ),
        start: 0,
        end: 17,
    },
    Case {
        exprs: [
            Located(
                SourceSpan {
                    decl: Module(
                        ModuleId {
                            name: "Test",
                        },
                    ),
                    start: 5,
                    end: 6,
                },
                Var(
                    QualifiedName {
                        module: None,
                        name: Symbol {
                            text: "x",
                        },
                    },
                ),
            ),
        ],
        branches: [
            CaseBranch {
                pats: [
                    Located(
                        SourceSpan {
                            decl: Module(
                                ModuleId {
                                    name: "Test",
                                },
                            ),
                            start: 10,
                            end: 12,
                        },
                        Literal(
                            Integer(
                                -1,
                            ),
                        ),
                    ),
                ],
                expr: Unconditional(
                    Located(
                        SourceSpan {
                            decl: Module(
                                ModuleId {
                                    name: "Test",
                                },
                            ),
                            start: 16,
                            end: 17,
                        },
                        Literal(
                            Integer(
                                1,
                            ),
                        ),
                    ),
                ),
            },
        ],
    },
)
