---
source: src/parser.rs
expression: "parse_expr(indoc!(\"\n          case x of\n            C a b ->\n              1\n            D (A c) _ -> 1\n            E -> 1\n            _ -> 1\n        \"))"
---
Located(
    SourceSpan {
        decl: Module(
            ModuleId {
                name: "Test",
            },
        ),
        start: 0,
        end: 62,
    },
    Case {
        exprs: [
            Located(
                SourceSpan {
                    decl: Module(
                        ModuleId {
                            name: "Test",
                        },
                    ),
                    start: 5,
                    end: 6,
                },
                Var(
                    QualifiedName {
                        module: None,
                        name: Symbol {
                            text: "x",
                        },
                    },
                ),
            ),
        ],
        branches: [
            CaseBranch {
                pats: [
                    Located(
                        SourceSpan {
                            decl: Module(
                                ModuleId {
                                    name: "Test",
                                },
                            ),
                            start: 12,
                            end: 17,
                        },
                        DataConstructorApp(
                            QualifiedName {
                                module: None,
                                name: Symbol {
                                    text: "C",
                                },
                            },
                            [
                                Located(
                                    SourceSpan {
                                        decl: Module(
                                            ModuleId {
                                                name: "Test",
                                            },
                                        ),
                                        start: 14,
                                        end: 15,
                                    },
                                    Var(
                                        Symbol {
                                            text: "a",
                                        },
                                    ),
                                ),
                                Located(
                                    SourceSpan {
                                        decl: Module(
                                            ModuleId {
                                                name: "Test",
                                            },
                                        ),
                                        start: 16,
                                        end: 17,
                                    },
                                    Var(
                                        Symbol {
                                            text: "b",
                                        },
                                    ),
                                ),
                            ],
                        ),
                    ),
                ],
                expr: Unconditional(
                    Located(
                        SourceSpan {
                            decl: Module(
                                ModuleId {
                                    name: "Test",
                                },
                            ),
                            start: 25,
                            end: 26,
                        },
                        Literal(
                            Integer(
                                1,
                            ),
                        ),
                    ),
                ),
            },
            CaseBranch {
                pats: [
                    Located(
                        SourceSpan {
                            decl: Module(
                                ModuleId {
                                    name: "Test",
                                },
                            ),
                            start: 29,
                            end: 38,
                        },
                        DataConstructorApp(
                            QualifiedName {
                                module: None,
                                name: Symbol {
                                    text: "D",
                                },
                            },
                            [
                                Located(
                                    SourceSpan {
                                        decl: Module(
                                            ModuleId {
                                                name: "Test",
                                            },
                                        ),
                                        start: 31,
                                        end: 36,
                                    },
                                    DataConstructorApp(
                                        QualifiedName {
                                            module: None,
                                            name: Symbol {
                                                text: "A",
                                            },
                                        },
                                        [
                                            Located(
                                                SourceSpan {
                                                    decl: Module(
                                                        ModuleId {
                                                            name: "Test",
                                                        },
                                                    ),
                                                    start: 34,
                                                    end: 35,
                                                },
                                                Var(
                                                    Symbol {
                                                        text: "c",
                                                    },
                                                ),
                                            ),
                                        ],
                                    ),
                                ),
                                Located(
                                    SourceSpan {
                                        decl: Module(
                                            ModuleId {
                                                name: "Test",
                                            },
                                        ),
                                        start: 37,
                                        end: 38,
                                    },
                                    Wildcard,
                                ),
                            ],
                        ),
                    ),
                ],
                expr: Unconditional(
                    Located(
                        SourceSpan {
                            decl: Module(
                                ModuleId {
                                    name: "Test",
                                },
                            ),
                            start: 42,
                            end: 43,
                        },
                        Literal(
                            Integer(
                                1,
                            ),
                        ),
                    ),
                ),
            },
            CaseBranch {
                pats: [
                    Located(
                        SourceSpan {
                            decl: Module(
                                ModuleId {
                                    name: "Test",
                                },
                            ),
                            start: 46,
                            end: 47,
                        },
                        DataConstructorApp(
                            QualifiedName {
                                module: None,
                                name: Symbol {
                                    text: "E",
                                },
                            },
                            [],
                        ),
                    ),
                ],
                expr: Unconditional(
                    Located(
                        SourceSpan {
                            decl: Module(
                                ModuleId {
                                    name: "Test",
                                },
                            ),
                            start: 51,
                            end: 52,
                        },
                        Literal(
                            Integer(
                                1,
                            ),
                        ),
                    ),
                ),
            },
            CaseBranch {
                pats: [
                    Located(
                        SourceSpan {
                            decl: Module(
                                ModuleId {
                                    name: "Test",
                                },
                            ),
                            start: 55,
                            end: 56,
                        },
                        Wildcard,
                    ),
                ],
                expr: Unconditional(
                    Located(
                        SourceSpan {
                            decl: Module(
                                ModuleId {
                                    name: "Test",
                                },
                            ),
                            start: 60,
                            end: 61,
                        },
                        Literal(
                            Integer(
                                1,
                            ),
                        ),
                    ),
                ),
            },
        ],
    },
)
