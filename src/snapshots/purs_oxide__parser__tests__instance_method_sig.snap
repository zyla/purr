---
source: src/parser.rs
expression: "parse_module(indoc!(r#\"\n            module Test where\n            instance Foo Int where\n                x :: Int\n        \"#))"
---
Located(
    SourceSpan {
        start: 0,
        end: 54,
    },
    Commented(
        [],
        ModuleInner {
            name: ModuleId {
                name: "Test",
            },
            exports: None,
            imports: [],
            declarations: [
                Located(
                    SourceSpan {
                        start: 18,
                        end: 54,
                    },
                    Commented(
                        [],
                        InstanceChain(
                            [
                                InstanceDeclaration {
                                    constraints: [],
                                    instance_type: Plain,
                                    instance_name: None,
                                    class: QualifiedName {
                                        module: None,
                                        name: Symbol {
                                            text: "Foo",
                                        },
                                    },
                                    args: [
                                        Located(
                                            SourceSpan {
                                                start: 31,
                                                end: 34,
                                            },
                                            TypeConstructor(
                                                QualifiedName {
                                                    module: None,
                                                    name: Symbol {
                                                        text: "Int",
                                                    },
                                                },
                                            ),
                                        ),
                                    ],
                                    body: [
                                        Located(
                                            SourceSpan {
                                                start: 45,
                                                end: 53,
                                            },
                                            Commented(
                                                [],
                                                TypeSignature(
                                                    TypeDeclarationData {
                                                        ident: Symbol {
                                                            text: "x",
                                                        },
                                                        r#type: Located(
                                                            SourceSpan {
                                                                start: 50,
                                                                end: 53,
                                                            },
                                                            TypeConstructor(
                                                                QualifiedName {
                                                                    module: None,
                                                                    name: Symbol {
                                                                        text: "Int",
                                                                    },
                                                                },
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            ),
                                        ),
                                    ],
                                },
                            ],
                        ),
                    ),
                ),
            ],
        },
    ),
)
