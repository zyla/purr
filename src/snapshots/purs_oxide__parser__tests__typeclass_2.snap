---
source: src/parser.rs
expression: "parse_module(indoc!(r#\"\n            module Test where\n            class Bar a <= Foo a where\n              bar :: a\n        \"#))"
---
Located(
    SourceSpan {
        start: 0,
        end: 56,
    },
    Commented(
        [],
        ModuleInner {
            name: ModuleId {
                name: "Test",
            },
            exports: None,
            imports: [],
            declarations: [
                Located(
                    SourceSpan {
                        start: 18,
                        end: 56,
                    },
                    Commented(
                        [],
                        Class(
                            TypeClassDeclaration {
                                constraints: [
                                    Located(
                                        SourceSpan {
                                            start: 24,
                                            end: 29,
                                        },
                                        TypeApp(
                                            Located(
                                                SourceSpan {
                                                    start: 24,
                                                    end: 27,
                                                },
                                                TypeConstructor(
                                                    QualifiedName {
                                                        module: None,
                                                        name: Symbol {
                                                            text: "Bar",
                                                        },
                                                    },
                                                ),
                                            ),
                                            Located(
                                                SourceSpan {
                                                    start: 28,
                                                    end: 29,
                                                },
                                                Var(
                                                    Symbol {
                                                        text: "a",
                                                    },
                                                ),
                                            ),
                                        ),
                                    ),
                                ],
                                name: Symbol {
                                    text: "Foo",
                                },
                                params: [
                                    (
                                        Symbol {
                                            text: "a",
                                        },
                                        None,
                                    ),
                                ],
                                fundeps: [],
                                methods: [
                                    TypeDeclarationData {
                                        ident: Symbol {
                                            text: "bar",
                                        },
                                        r#type: Located(
                                            SourceSpan {
                                                start: 54,
                                                end: 55,
                                            },
                                            Var(
                                                Symbol {
                                                    text: "a",
                                                },
                                            ),
                                        ),
                                    },
                                ],
                            },
                        ),
                    ),
                ),
            ],
        },
    ),
)
